// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using factopia_backend.DAL.Database;

#nullable disable

namespace factopia_backend.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250406011804_Video Seeding")]
    partial class VideoSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("factopia_backend.Domain.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers", (string)null);
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.GameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "REgarde la video ensuite, swipe a droite si c'est vrai !",
                            Title = "TikTok"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fun fact, annecdote et autre conseil.",
                            Title = "Le Saviez-vous ?"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Title = "Vrai ou Fake?"
                        });
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameTypeId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Regarde et decide si c'est vrai",
                            GameTypeId = 1
                        });
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Resources", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/1_A.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/1_B.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/2_A.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/2_B.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 5,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/3_A.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 6,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/3_B.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 7,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/4_A.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 8,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/4_B.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 9,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/5_A.mp4",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 10,
                            FileType = "Image",
                            IsCorrect = false,
                            Name = "A_1.mp4",
                            Path = "/videos/5_B.mp4",
                            QuestionId = 1
                        });
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.UserQuestion", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("UserQuestions", (string)null);
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Answer", b =>
                {
                    b.HasOne("factopia_backend.Domain.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Question", b =>
                {
                    b.HasOne("factopia_backend.Domain.Models.GameType", "GameType")
                        .WithMany("Questions")
                        .HasForeignKey("GameTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameType");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Resource", b =>
                {
                    b.HasOne("factopia_backend.Domain.Models.Question", "question")
                        .WithMany("Resources")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.UserQuestion", b =>
                {
                    b.HasOne("factopia_backend.Domain.Models.Question", "Question")
                        .WithMany("UserQuestion")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("factopia_backend.Domain.Models.User", "User")
                        .WithMany("UserQuestion")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.GameType", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Resources");

                    b.Navigation("UserQuestion");
                });

            modelBuilder.Entity("factopia_backend.Domain.Models.User", b =>
                {
                    b.Navigation("UserQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
